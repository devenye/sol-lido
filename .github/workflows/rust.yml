name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: '*'

env:
  CARGO_TERM_COLOR: always

jobs:

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: cache-build-artifacts
      uses: actions/cache@v2
      with:
        path: |
          target
          multisig/target
        key: cargo-bpf-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          cargo-bpf-${{ hashFiles('Cargo.lock') }}
          cargo-bpf

    - name: Build on-chain BPF programs
      run: |
        sudo apt-get install -y libudev-dev
        sh -c "$(curl -sSfL https://release.solana.com/v1.6.7/install)"
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"

        # Build all BPF programs in the workspace, including the SPL stake pool,
        # because we will need them later to test Solido.
        cargo build-bpf

    - name: Test on-chain BPF programs
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"

        # But only run the tests for Solido itself, the SPL tests are already
        # executed upstream.
        cargo test-bpf --manifest-path program/Cargo.toml

    - name: Build CLI client
      run: cargo build --bin solido

    - name: Run Solido integration test
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        validator=$(tests/start_test_validator.py)

        # Perform initial Solana setup.
        solana-keygen new --no-bip39-passphrase --silent
        solana config set --url http://127.0.0.1:8899
        # TODO: It *should* be online, that's what the start script enforces ...
        # but still, let's see if a sleep fixes this.
        sleep 5.0
        solana airdrop 500.0

        tests/test_solido.py
        kill $validator

    - name: Run Multisig integration test
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        validator=$(tests/start_test_validator.py)

        # Perform initial Solana setup.
        solana-keygen new --no-bip39-passphrase --silent
        solana config set --url http://127.0.0.1:8899
        sleep 5.0
        solana airdrop 500.0

        tests/test_multisig.py
        kill $validator

  clippy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: cache-build-artifacts
      uses: actions/cache@v2
      with:
        path: target
        key: cargo-clippy-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          cargo-clippy-${{ hashFiles('Cargo.lock') }}
          cargo-clippy

    - name: install-clippy
      run: rustup component add clippy

    - name: run-clippy
      run: |
        sudo apt-get install -y libudev-dev
        cargo clippy -- -W clippy::pedantic

  coverage:
    runs-on:  ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: cache-build-artifacts
        uses: actions/cache@v2
        with:
          path: target
          key: cargo-tarpaulin-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-tarpaulin-${{ hashFiles('Cargo.lock') }}
            cargo-tarpaulin

      - name: Generate code coverage
        run: |
          sudo apt update
          sudo apt install libudev-dev
          cargo install --version 0.16.0 cargo-tarpaulin 
          cargo tarpaulin --verbose --workspace --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}} 
          fail_ci_if_error:     true
